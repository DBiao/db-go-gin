basePath: 192.168.1.45:10010
definitions:
  model.ApplicationChain:
    properties:
      app_chain_name:
        description: 应用链名称
        type: string
      consensus_mechanism:
        description: 共识机制
        type: string
      contract_type:
        description: 合约类型
        type: string
      created_at:
        description: 创建时间
        type: string
      cross_chain_technology:
        description: 支持的跨链技术
        type: string
      gateway_id:
        description: 网关Id
        type: integer
      id:
        description: 主键ID
        type: integer
      logo:
        description: 应用链Logo
        type: string
      rpc_url:
        description: 应用链RPC
        type: string
      status:
        description: 应用链状态(1:正常 2:异常 3.冻结)
        type: integer
      user_id:
        description: 用户Id
        type: integer
    type: object
  model.ApplicationChainName:
    properties:
      app_chain_name:
        description: 应用链名称
        type: string
      id:
        description: 应用链Id
        type: integer
    type: object
  model.CrossChainChannel:
    properties:
      application_chain_ids:
        description: 支持的应用链Id
        type: string
      bandwidth:
        description: 带宽
        type: integer
      channel_grade:
        description: 通道密级
        type: string
      created_at:
        description: 创建时间
        type: string
      cross_chain_channel_name:
        description: 跨链通道名称
        type: string
      exit_app_chain_ids:
        description: 申请退出的应用链Id
        type: string
      gateway_ids:
        description: 网关Ids
        type: string
      id:
        description: 主键ID
        type: integer
      join_app_chain_ids:
        description: 申请加入的应用链Id
        type: string
      status:
        description: 跨链通道状态(1:正常 2:异常 3.冻结)
        type: integer
      user_id:
        description: 用户Id
        type: integer
    type: object
  model.CrossChainTransaction:
    properties:
      action:
        description: 动作(1:读 2:写)
        type: integer
      channel_name:
        description: 通道名称
        type: string
      created_at:
        description: 创建时间
        type: string
      gateway_ids:
        description: 网关Id
        type: string
      id:
        description: 主键ID
        type: integer
      request_user_id:
        description: 跨链请求发起用户标识
        type: string
      source_app_chain_contract:
        description: 来源链合约名称
        type: string
      source_app_chain_id:
        description: 来源链标识
        type: string
      status:
        description: 状态(1:成功 2:失败)
        type: integer
      target_app_chain_contract:
        description: 目标链合约名称
        type: string
      target_app_chain_id:
        description: 目标链标识
        type: string
      transaction_id:
        description: 跨链交易标识
        type: string
      transaction_proof:
        description: 跨链交易证明凭证
        type: string
      transaction_receipt:
        description: 跨链交易回执
        type: string
      transaction_time:
        description: 跨链交易时间
        type: string
    type: object
  model.Gateway:
    properties:
      created_at:
        description: 创建时间
        type: string
      gateway_grade:
        description: 网关密级
        type: string
      gateway_name:
        description: 网关名称
        type: string
      id:
        description: 主键ID
        type: integer
      ip:
        description: 网关Ip地址
        type: string
      province:
        description: 省份
        type: string
      status:
        description: 网关状态(1:正常 2:异常 3.冻结)
        type: integer
      unit:
        description: 所属机构
        type: string
      user_id:
        description: 用户Id
        type: integer
    type: object
  model.GatewayName:
    properties:
      gateway_name:
        description: 网关名称
        type: string
      id:
        description: 网关Id
        type: integer
    type: object
  model.User:
    properties:
      account:
        description: 账号
        type: string
      contact_name:
        description: 联系人姓名
        type: string
      created_at:
        description: 创建时间
        type: string
      head_portrait:
        description: 头像
        type: string
      id:
        description: 主键ID
        type: integer
      identity:
        description: 身份
        type: integer
      mail:
        description: 邮箱
        type: string
      mobile_number:
        description: 手机号码
        type: string
      name:
        description: 名称
        type: string
      opinion:
        description: 审核意见
        type: string
      password:
        description: 密码
        type: string
      status:
        description: 状态(1.审核中 2.审核通过 3.审核拒绝)
        type: integer
      unit:
        description: 用户单位
        type: string
    type: object
  request.AuditAppChainJoinChannelReq:
    properties:
      app_chain_id:
        description: 应用链Id
        type: integer
      types:
        description: 加入/退出 1:加入 2:退出
        type: integer
    type: object
  request.AuditUserRegisterReq:
    properties:
      opinion:
        description: 审核意见
        type: string
      passed:
        description: 是否通过 2:通过 3:拒绝
        type: integer
      user_id:
        description: 玩家Id
        type: integer
    type: object
  request.CreateTransactionReq:
    properties:
      action:
        description: 动作(1:读 2:写)
        type: integer
      channel_name:
        description: 通道名称
        type: string
      gateway_ids:
        description: 网关Id
        type: string
      request_user_id:
        description: 跨链请求发起用户标识
        type: string
      source_app_chain_contract:
        description: 来源链合约名称
        type: string
      source_app_chain_id:
        description: 来源链标识
        type: string
      status:
        description: 状态(1:成功 2:失败)
        type: integer
      target_app_chain_contract:
        description: 目标链合约名称
        type: string
      target_app_chain_id:
        description: 目标链标识
        type: string
      transaction_id:
        description: 跨链交易标识
        type: string
      transaction_proof:
        description: 跨链交易证明凭证
        type: string
      transaction_receipt:
        description: 跨链交易回执
        type: string
      transaction_time:
        description: 跨链交易时间
        type: string
    type: object
  request.ExitCrossChainChannelReq:
    properties:
      channel_id:
        description: 跨链通道Id
        type: integer
    type: object
  request.Filter:
    properties:
      column:
        description: 列
        type: string
      operator:
        description: 运算符
        type: string
      value:
        description: 值
    type: object
  request.GetAllApplicationChainReq:
    properties:
      filter:
        items:
          $ref: '#/definitions/request.Filter'
        type: array
      page:
        description: 页码
        type: integer
      page_size:
        description: 每页大小
        type: integer
    type: object
  request.GetAllByAppChainIdReq:
    properties:
      id:
        description: 应用链Id
        type: integer
      page:
        description: 页码
        type: integer
      page_size:
        description: 每页大小
        type: integer
    type: object
  request.GetAllCrossChainChannelReq:
    properties:
      filter:
        items:
          $ref: '#/definitions/request.Filter'
        type: array
      page:
        description: 页码
        type: integer
      page_size:
        description: 每页大小
        type: integer
    type: object
  request.GetAllGatewayReq:
    properties:
      filter:
        items:
          $ref: '#/definitions/request.Filter'
        type: array
      page:
        description: 页码
        type: integer
      page_size:
        description: 每页大小
        type: integer
    type: object
  request.GetAllUserReq:
    properties:
      filter:
        items:
          $ref: '#/definitions/request.Filter'
        type: array
      page:
        description: 页码
        type: integer
      page_size:
        description: 每页大小
        type: integer
    type: object
  request.GetAppChainByGatewayIdReq:
    properties:
      id:
        type: integer
      page:
        description: 页码
        type: integer
      page_size:
        description: 每页大小
        type: integer
    type: object
  request.JoinCrossChainChannelReq:
    properties:
      channel_id:
        description: 跨链通道Id
        type: integer
    type: object
  request.LoginReq:
    properties:
      account:
        description: 账号
        type: string
      password:
        description: 密码
        type: string
    type: object
  request.PageInfo:
    properties:
      page:
        description: 页码
        type: integer
      page_size:
        description: 每页大小
        type: integer
    type: object
  request.RegisterReq:
    properties:
      account:
        description: 账号
        type: string
      account_type:
        description: 账号类型 1:网关管理员 2.应用链管理员 3.跨链通道管理员
        type: integer
      app_chain_name:
        description: 应用链名称
        type: string
      application_chain_ids:
        description: 支持的应用链Id
        type: string
      bandwidth:
        description: 带宽
        type: integer
      channel_grade:
        description: 通道密级
        type: string
      consensus_mechanism:
        description: 共识机制
        type: string
      contact_name:
        description: 联系人姓名
        type: string
      contract_type:
        description: 合约类型
        type: string
      cross_chain_channel_name:
        description: 跨链通道名称
        type: string
      cross_chain_technology:
        description: 支持的跨链技术
        type: string
      gateway_grade:
        description: 网关密级
        type: string
      gateway_id:
        description: 网关Id
        type: integer
      gateway_ids:
        description: 网关Ids
        type: string
      gateway_name:
        description: 网关名称
        type: string
      head_portrait:
        description: 头像
        type: string
      ip:
        description: 网关Ip地址
        type: string
      logo:
        description: 应用链Logo
        type: string
      mail:
        description: 邮箱
        type: string
      mobile_number:
        description: 手机号码
        type: string
      name:
        description: 名称
        type: string
      password:
        description: 密码
        type: string
      province:
        description: 省份
        type: string
      rpc_url:
        description: 应用链RPC
        type: string
      unit:
        description: 用户单位
        type: string
    type: object
  request.ResetPasswordReq:
    properties:
      password:
        description: 新密码
        type: string
      user_id:
        description: 玩家Id
        type: integer
    type: object
  request.SetAppChainReq:
    properties:
      app_chain_id:
        description: 应用链Id
        type: integer
      status:
        description: 应用链状态 1:解冻 3:冻结
        type: integer
    type: object
  request.SetGatewayReq:
    properties:
      gateway_id:
        description: 网关Id
        type: integer
      status:
        description: 网关状态 1:解冻 3:冻结
        type: integer
    type: object
  request.UpdatePasswordReq:
    properties:
      new_password:
        description: 新密码
        type: string
      old_password:
        description: 旧密码
        type: string
    type: object
  request.UpdateUserInfoReq:
    properties:
      user_info:
        items:
          $ref: '#/definitions/request.UserInfo'
        type: array
    type: object
  request.UserInfo:
    properties:
      key:
        description: 字符串
        type: string
      value:
        description: 值
    type: object
  request.UserInfoMsg:
    properties:
      head_portrait:
        description: 头像
        type: string
      mail:
        description: 邮箱
        type: string
      mobile_number:
        description: 手机号码
        type: string
      name:
        description: 联系人姓名
        type: string
    type: object
  response.EmptyResp:
    type: object
  response.GetAllTotalsResp:
    properties:
      app_chain:
        description: 应用链数量
        type: integer
      cross_chain_channel:
        description: 跨链通道数量
        type: integer
      gateway:
        description: 网关数量
        type: integer
      transaction:
        description: 跨链事务数量
        type: integer
    type: object
  response.GetAppChainByIdResp:
    properties:
      app_chain_name:
        description: 应用链名称
        type: string
      consensus_mechanism:
        description: 共识机制
        type: string
      contact_name:
        description: 联系人姓名
        type: string
      contract_type:
        description: 合约类型
        type: string
      created_at:
        description: 创建时间
        type: string
      cross_chain_technology:
        description: 支持的跨链技术
        type: string
      gateway_id:
        description: 网关Id
        type: integer
      id:
        description: 主键ID
        type: integer
      logo:
        description: 应用链Logo
        type: string
      mail:
        description: 邮箱
        type: string
      mobile_number:
        description: 手机号码
        type: string
      rpc_url:
        description: 应用链RPC
        type: string
      status:
        description: 应用链状态(1:正常 2:异常 3.冻结)
        type: integer
      unit:
        description: 用户单位
        type: string
      user_id:
        description: 用户Id
        type: integer
    type: object
  response.GetByIdResp:
    properties:
      contact_name:
        description: 联系人姓名
        type: string
      gateway_grade:
        description: 网关密级
        type: string
      gateway_ip:
        description: 网关Ip地址
        type: string
      gateway_name:
        description: 网关名称
        type: string
      gateway_status:
        description: 网关状态
        type: integer
      province:
        description: 所属省份
        type: string
      unit:
        description: 用户单位
        type: string
    type: object
  response.GetSysResourcesResp:
    properties:
      total_bandwidth:
        description: 总带宽使用率
        type: integer
      total_cpu:
        description: 总cpu使用率
        type: integer
      total_memory:
        description: 总内存使用率
        type: integer
      use_bandwidth:
        description: 使用带宽使用率
        type: integer
      use_cpu:
        description: 使用cpu使用率
        type: integer
      use_memory:
        description: 使用内存使用率
        type: integer
    type: object
  response.GetUserByIdResp:
    properties:
      account:
        description: 账号
        type: string
      contact_name:
        description: 联系人姓名
        type: string
      created_at:
        description: 创建时间
        type: string
      head_portrait:
        description: 头像
        type: string
      id:
        description: 主键ID
        type: integer
      identity:
        description: 身份
        type: integer
      mail:
        description: 邮箱
        type: string
      mobile_number:
        description: 手机号码
        type: string
      name:
        description: 名称
        type: string
      opinion:
        description: 审核意见
        type: string
      password:
        description: 密码
        type: string
      status:
        description: 状态(1.审核中 2.审核通过 3.审核拒绝)
        type: integer
      unit:
        description: 用户单位
        type: string
      value: {}
    type: object
  response.LoginResp:
    properties:
      identity:
        description: 身份Id(1.云平台管理员 2.网关管理员 3.应用链管理员 4.通道管理员)
        type: integer
      token:
        description: token
        type: string
    type: object
  response.PageResult:
    properties:
      list:
        description: 数据
      page:
        description: 页码
        type: integer
      page_size:
        description: 页数
        type: integer
      total:
        description: 总数
        type: integer
    type: object
  response.ResponseMsg:
    properties:
      code:
        description: 返回码
        type: integer
      data:
        description: 返回数据
      message:
        description: 返回信息
        type: string
    type: object
host: localhost:10010
info:
  contact:
    email: 624796905@qq.com
    name: 天河国云
    url: http://www.swagger.io/support
  description: 跨链云平台服务接口文档
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: 跨链云平台服务接口文档
  version: "1.0"
paths:
  /applicationChain/exitCrossChainChannel:
    post:
      consumes:
      - application/json
      parameters:
      - description: 退出跨链通道参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ExitCrossChainChannelReq'
      produces:
      - application/json
      responses: {}
      security:
      - LoginToken: []
      summary: 退出跨链通道
      tags:
      - API.applicationChain
  /applicationChain/getAllApplicationChain:
    post:
      consumes:
      - application/json
      parameters:
      - description: 获取所有应用链参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetAllApplicationChainReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"msg":"ok","data":{}}'
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                list:
                  $ref: '#/definitions/model.ApplicationChain'
              type: object
      summary: 获取所有应用链
      tags:
      - API.applicationChain
  /applicationChain/getAllApplicationChainName:
    get:
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"msg":"ok","data":{}}'
          schema:
            items:
              $ref: '#/definitions/model.ApplicationChainName'
            type: array
      summary: 获取所有应用链名称和Id
      tags:
      - API.applicationChain
  /applicationChain/getApplicationChainByChannelId/{id}:
    get:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: 跨链通道id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"msg":"ok","data":{}}'
          schema:
            items:
              $ref: '#/definitions/model.ApplicationChain'
            type: array
      security:
      - LoginToken: []
      summary: 根据跨链通道Id获取所有应用链
      tags:
      - API.applicationChain
  /applicationChain/getApplicationChainByGatewayId:
    post:
      consumes:
      - application/json
      parameters:
      - description: 获取应用链参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetAppChainByGatewayIdReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"msg":"ok","data":{}}'
          schema:
            $ref: '#/definitions/model.ApplicationChain'
      security:
      - LoginToken: []
      summary: 根据网关Id获取所有应用链
      tags:
      - API.applicationChain
  /applicationChain/getApplicationChainById/{id}:
    get:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: 应用链id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"msg":"ok","data":{}}'
          schema:
            $ref: '#/definitions/response.GetAppChainByIdResp'
      security:
      - LoginToken: []
      summary: 获取单个应用链详情
      tags:
      - API.applicationChain
  /applicationChain/getApplicationChainInfo:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"msg":"ok","data":{}}'
          schema:
            $ref: '#/definitions/model.ApplicationChain'
      security:
      - LoginToken: []
      summary: 获取登录应用链详情信息
      tags:
      - API.applicationChain
  /applicationChain/joinCrossChainChannel:
    post:
      consumes:
      - application/json
      parameters:
      - description: 加入跨链通道参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.JoinCrossChainChannelReq'
      produces:
      - application/json
      responses: {}
      security:
      - LoginToken: []
      summary: 加入跨链通道
      tags:
      - API.applicationChain
  /applicationChain/setApplicationChain:
    post:
      consumes:
      - application/json
      parameters:
      - description: 冻结应用链参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SetAppChainReq'
      produces:
      - application/json
      responses: {}
      security:
      - LoginToken: []
      summary: 冻结/解冻应用链
      tags:
      - API.applicationChain
  /crossChainChannel/auditAppChainJoinChannel:
    post:
      consumes:
      - application/json
      parameters:
      - description: 获取跨链通道参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.AuditAppChainJoinChannelReq'
      produces:
      - application/json
      responses: {}
      security:
      - LoginToken: []
      summary: 跨链通道审核应用锁加入/退出通道
      tags:
      - API.crossChainChannel
  /crossChainChannel/getAllCrossChainChannel:
    post:
      consumes:
      - application/json
      parameters:
      - description: 获取所有跨链通道参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetAllCrossChainChannelReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"msg":"ok","data":{}}'
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                list:
                  $ref: '#/definitions/model.CrossChainChannel'
              type: object
      summary: 获取所有跨链通道信息
      tags:
      - API.crossChainChannel
  /crossChainChannel/getApplyApplicationChain/{id}:
    get:
      parameters:
      - description: 跨链通道id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - LoginToken: []
      summary: 获取所有申请应用链
      tags:
      - API.crossChainChannel
  /crossChainChannel/getCrossChainChannelByAppChainId:
    post:
      consumes:
      - application/json
      parameters:
      - description: 获取跨链通道参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetAllByAppChainIdReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"msg":"ok","data":{}}'
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                list:
                  $ref: '#/definitions/model.CrossChainChannel'
              type: object
      security:
      - LoginToken: []
      summary: 根据应用链Id获取所有跨链通道
      tags:
      - API.crossChainChannel
  /crossChainChannel/getCrossChainChannelByGatewayId:
    post:
      consumes:
      - application/json
      parameters:
      - description: 获取跨链通道参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetAppChainByGatewayIdReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"msg":"ok","data":{}}'
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                list:
                  $ref: '#/definitions/model.CrossChainChannel'
              type: object
      security:
      - LoginToken: []
      summary: 根据网关Id获取所有跨链通道
      tags:
      - API.crossChainChannel
  /crossChainChannel/getCrossChainChannelById/{id}:
    get:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: 跨链通道id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"msg":"ok","data":{}}'
          schema:
            $ref: '#/definitions/model.CrossChainTransaction'
      summary: 获取单个跨链通道详细信息
      tags:
      - API.crossChainChannel
  /crossChainChannel/getCrossChainChannelInfo:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"msg":"ok","data":{}}'
          schema:
            $ref: '#/definitions/model.CrossChainChannel'
      security:
      - LoginToken: []
      summary: 获取登录跨链通道详情信息
      tags:
      - API.crossChainChannel
  /gateway/getAllGateway:
    post:
      consumes:
      - application/json
      parameters:
      - description: 获取所有网关参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetAllGatewayReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"msg":"ok","data":{}}'
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                list:
                  $ref: '#/definitions/model.Gateway'
              type: object
      summary: 获取所有网关信息
      tags:
      - API.gateway
  /gateway/getAllGatewayName:
    get:
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"msg":"ok","data":{}}'
          schema:
            items:
              $ref: '#/definitions/model.GatewayName'
            type: array
      summary: 获取所有网关的名称和Id信息
      tags:
      - API.gateway
  /gateway/getGatewayById/{id}:
    get:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: 网关id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"msg":"ok","data":{}}'
          schema:
            $ref: '#/definitions/response.GetByIdResp'
      security:
      - LoginToken: []
      summary: 获取单个网关详情信息
      tags:
      - API.gateway
  /gateway/getGatewayInfo:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"msg":"ok","data":{}}'
          schema:
            $ref: '#/definitions/model.Gateway'
      security:
      - LoginToken: []
      summary: 获取登录网关详情信息
      tags:
      - API.gateway
  /gateway/getGatewaySysResources/{id}:
    get:
      parameters:
      - description: 网关Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"msg":"ok","data":{}}'
          schema:
            $ref: '#/definitions/response.GetSysResourcesResp'
      security:
      - LoginToken: []
      summary: 获取物理网关服务器系统资源
      tags:
      - API.gateway
  /gateway/setGateway:
    post:
      consumes:
      - application/json
      parameters:
      - description: 冻结/解冻网关参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SetGatewayReq'
      produces:
      - application/json
      responses: {}
      security:
      - LoginToken: []
      summary: 冻结/解冻网关
      tags:
      - API.gateway
  /transaction/createTransaction:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建事务参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.CreateTransactionReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"msg":"ok","data":{}}'
          schema:
            $ref: '#/definitions/response.ResponseMsg'
      summary: 创建事务
      tags:
      - API.transaction
  /transaction/getAllTransaction:
    post:
      consumes:
      - application/json
      parameters:
      - description: 获取所有事务参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"msg":"ok","data":{}}'
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                list:
                  $ref: '#/definitions/model.CrossChainTransaction'
              type: object
      summary: 获取所有事务
      tags:
      - API.transaction
  /user/auditUserRegister:
    post:
      consumes:
      - application/json
      parameters:
      - description: 审核用户注册参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.AuditUserRegisterReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"msg":"ok","data":{}}'
          schema:
            $ref: '#/definitions/response.EmptyResp'
      security:
      - LoginToken: []
      summary: 审核用户注册
      tags:
      - API.user
  /user/delete/{id}:
    delete:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: 用户id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"msg":"ok","data":{}}'
          schema:
            $ref: '#/definitions/response.EmptyResp'
      security:
      - LoginToken: []
      summary: 删除用户
      tags:
      - API.user
  /user/getAllTotals:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"msg":"ok","data":{}}'
          schema:
            $ref: '#/definitions/response.GetAllTotalsResp'
      security:
      - LoginToken: []
      summary: 获取资源总数量
      tags:
      - API.user
  /user/getAllUser:
    post:
      consumes:
      - application/json
      parameters:
      - description: 获取用户详细信息参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetAllUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"msg":"ok","data":{}}'
          schema:
            allOf:
            - $ref: '#/definitions/response.PageResult'
            - properties:
                list:
                  $ref: '#/definitions/model.User'
              type: object
      security:
      - LoginToken: []
      summary: 获取所有玩家信息
      tags:
      - API.user
  /user/getUserById/{id}:
    get:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: 用户id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"msg":"ok","data":{}}'
          schema:
            $ref: '#/definitions/response.GetUserByIdResp'
      security:
      - LoginToken: []
      summary: 获取用户详细信息
      tags:
      - API.user
  /user/getUserInfo:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"msg":"ok","data":{}}'
          schema:
            $ref: '#/definitions/model.User'
      security:
      - LoginToken: []
      summary: 获取登录账号信息
      tags:
      - API.user
  /user/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: 登录参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"msg":"ok","data":{}}'
          schema:
            $ref: '#/definitions/response.LoginResp'
      summary: 登录
      tags:
      - API.user
  /user/logout:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"msg":"ok","data":{}}'
          schema:
            $ref: '#/definitions/response.EmptyResp'
      security:
      - LoginToken: []
      summary: 登出
      tags:
      - API.user
  /user/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: 注册参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.RegisterReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"msg":"ok","data":{}}'
          schema:
            $ref: '#/definitions/response.EmptyResp'
      summary: 注册账号
      tags:
      - API.user
  /user/resetPassword:
    put:
      consumes:
      - application/json
      parameters:
      - description: 重置密码参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ResetPasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"msg":"ok","data":{}}'
          schema:
            $ref: '#/definitions/response.EmptyResp'
      security:
      - LoginToken: []
      summary: 重置密码
      tags:
      - API.user
  /user/updatePassword:
    put:
      consumes:
      - application/json
      parameters:
      - description: 修改密码参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UpdatePasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"msg":"ok","data":{}}'
          schema:
            $ref: '#/definitions/response.EmptyResp'
      security:
      - LoginToken: []
      summary: 修改密码
      tags:
      - API.user
  /user/updateUserInfo:
    put:
      consumes:
      - application/json
      parameters:
      - description: 用户信息参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UpdateUserInfoReq'
      - description: 修改用户信息参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UserInfoMsg'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"msg":"ok","data":{}}'
          schema:
            $ref: '#/definitions/response.EmptyResp'
      security:
      - LoginToken: []
      summary: 修改用户信息
      tags:
      - API.user
swagger: "2.0"
